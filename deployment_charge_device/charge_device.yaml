AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: ChargeDevice<<STAGE>>

Parameters:
  Bucket:
    Type: String
    Default: charge-device-lambda-function-dev
    AllowedValues:
      - charge-device-lambda-function-dev
      - charge-device-lambda-function-tst
      - charge-device-lambda-function-acpt
      - charge-device-lambda-function-prod
  BucketData:
    Type: String
    Default: charge-device-lambda-data-dev
    AllowedValues:
      - charge-device-lambda-data-dev
      - charge-device-lambda-data-tst
      - charge-device-lambda-data-acpt
      - charge-device-lambda-data-prod
  Stage:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Tst
      - Acpt
      - Prod
  LambdaRate:
    Description: >
      The rate (frequency) that determines when CloudWatch Events runs the rule that
      triggers the Lambda function.
    Default: "rate(5 minutes)"
    AllowedValues:
      - rate(1 minute)
      - rate(2 minutes)
      - rate(5 minutes)
      - rate(10 minutes)
    Type: String

Globals:
  Function:
    MemorySize: 512
    Runtime: python3.9
    Timeout: 30
    Environment:
      Variables:
        STAGE: !Sub '${Stage}'
        Bucket: !Sub '${Bucket}'
        BucketData: !Sub '${BucketData}'

Mappings: 
  EnvironmentMap: 
    Dev: 
      LogGroupRetentionDays: 1
      State: DISABLED
    Tst: 
      LogGroupRetentionDays: 7
      State: DISABLED
    Acpt: 
      LogGroupRetentionDays: 31
      State: ENABLED
    Prod:
      LogGroupRetentionDays: 365
      State: ENABLED

Resources:
  ChargeDeviceFunction<<STAGE>>:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: function.zip
      FunctionName: !Sub 'ChargeDeviceFunction${Stage}'
      Role: arn:aws:iam::<<ACCOUNT_ID>>:role/<<ACCOUNT_USER>>
      ReservedConcurrentExecutions: 1
      Layers: # An optional list Lambda Layers to use
        - !Ref ChargeDeviceLayer<<STAGE>>
  ChargeDeviceLogGroup<<STAGE>>:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 
        Fn::Sub:
          - '/aws/lambda/${name}'
          - name: !Sub 'ChargeDeviceFunction${Stage}'
      RetentionInDays: !FindInMap [ 'EnvironmentMap', !Ref 'Stage', 'LogGroupRetentionDays' ]
  ChargeDeviceLayer<<STAGE>>:
    Type: 'AWS::Serverless::LayerVersion'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      CompatibleRuntimes:
        - python3.9
      ContentUri: layer.zip
      Description: requirements-joblib-layer
      LayerName: ChargeDeviceLayer<<STAGE>>

Outputs:
  ChargeDeviceFunction<<STAGE>>ARN:
    Description: Logical id (ARN) of the lambda
    Value:
      !GetAtt ChargeDeviceFunction<<STAGE>>.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ChargeDeviceFunction${Stage}ARN'
  ChargeDeviceLayer<<STAGE>>ARN:
    Description: Logical id (ARN) of the layer
    Value:
      !Ref ChargeDeviceLayer<<STAGE>>
    Export:
      Name: !Sub '${AWS::StackName}-ChargeDeviceLayer<<TIMESTAMP>>ARN'