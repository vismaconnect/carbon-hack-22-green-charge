AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: ChargeStart<<STAGE>>

Parameters:
  Bucket:
    Type: String
    Default: charge-device-lambda-function-dev
    AllowedValues:
      - charge-device-lambda-function-dev
      - charge-device-lambda-function-tst
      - charge-device-lambda-function-acpt
      - charge-device-lambda-function-prod
  Stage:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Tst
      - Acpt
      - Prod

Globals:
  Function:
    MemorySize: 512
    Runtime: python3.9
    Timeout: 30
    Environment:
      Variables:
        STAGE: !Sub '${Stage}'
        Bucket: !Sub '${Bucket}'

Mappings: 
  EnvironmentMap: 
    Dev: 
      LogGroupRetentionDays: 1
    Tst: 
      LogGroupRetentionDays: 7
    Acpt: 
      LogGroupRetentionDays: 31
    Prod:
      LogGroupRetentionDays: 365

Resources:
  ChargeStartFunction<<STAGE>>:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: function.zip
      FunctionName: !Sub 'ChargeStartFunction${Stage}'
      Role: arn:aws:iam::<<ACCOUNT_ID>>:role/<<ACCOUNT_USER>>
      ReservedConcurrentExecutions: 1
      Layers: # An optional list Lambda Layers to use
        - !Ref ChargeStartLayer<<STAGE>>
  ChargeStartLogGroup<<STAGE>>:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 
        Fn::Sub:
          - '/aws/lambda/${name}'
          - name: !Sub 'ChargeStartFunction${Stage}'
      RetentionInDays: !FindInMap [ 'EnvironmentMap', !Ref 'Stage', 'LogGroupRetentionDays' ]
  ChargeStartLayer<<STAGE>>:
    Type: 'AWS::Serverless::LayerVersion'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      CompatibleRuntimes:
        - python3.9
      ContentUri: layer.zip
      Description: requirements-joblib-layer
      LayerName: ChargeStartLayer<<STAGE>>
  ChargeStartUrl<<STAGE>>:
    Type: 'AWS::Lambda::Url'
    Properties:
        TargetFunctionArn: !Ref ChargeStartFunction<<STAGE>>
        AuthType: NONE
  ChargeStartUrlPermission<<STAGE>>:
    Type: 'AWS::Lambda::Permission'
    Properties:
        FunctionName: !Ref ChargeStartFunction<<STAGE>>
        Principal: '*'
        Action: lambda:InvokeFunctionUrl
        FunctionUrlAuthType: NONE


Outputs:
  ChargeStartFunction<<STAGE>>ARN:
    Description: Logical id (ARN) of the lambda
    Value:
      !GetAtt ChargeStartFunction<<STAGE>>.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ChargeStartFunction${Stage}ARN'
  ChargeStartLayer<<STAGE>>ARN:
    Description: Logical id (ARN) of the layer
    Value:
      !Ref ChargeStartLayer<<STAGE>>
    Export:
      Name: !Sub '${AWS::StackName}-ChargeStartLayer<<TIMESTAMP>>ARN'